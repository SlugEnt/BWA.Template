@page "/"

@using Microsoft.AspNetCore.Authorization
@attribute [AllowAnonymous]  
@using global::BWA.Client.Classes
@using SlugEnt.BWA.Entities.Models
@using SlugEnt.BWA.BusinessComponents.Abstracts



<PageTitle>Home</PageTitle>

<TestA Name="@user.FirstName" 
       User="@user"
       AgeUpdated="AgeChanged"></TestA>

<p>AgeChanged:  @ageChanged</p>


<MyAppBar></MyAppBar>


<h3 class="text-muted"> This page: Rendered At: @(OperatingSystem.IsBrowser() ? "Wasm" : "Server")</h3>
<MudText Typo="Typo.h3" GutterBottom="true">Hello, SlugEnt Template User!!</MudText>
<MudText Class="mb-8">Welcome to your new app, powered by MudBlazor and the .NET 9 Template, customized for SlugEnt!</MudText>

<MudAlert Severity="Severity.Normal">
    This application is making use of several components.  You can find the documentation for these here:
    
    <!--  Mud Blazor -->
    <h3>
        <MudLink Href="https://mudblazor.com" Target="_blank" Typo="Typo.body2" Color="Color.Primary">
            <b>MudBlazor</b>
        </MudLink>
    </h3>
    <MudText Type="Typo.body2">
        This is the primary widget control for the GUI part of the application
    </MudText>
    <br />
    

    <!--  Mud Extensions -->
    <h3>
        <MudLink Href="https://codebeam-mudextensions.pages.dev" Target="_blank" Typo="Typo.body2" Color="Color.Primary">
            <b>MudBlazor Extensions</b>
        </MudLink>
    </h3>
    <MudText Type="Typo.body2">
        Provides more advanced Widgets as well as extending some of the existing
    </MudText>
    <br/>


    <!--  MudEx -->
    <h3>
        <MudLink Href="https://www.mudex.org" Target="_blank" Typo="Typo.body2" Color="Color.Primary">
            <b>Mud Extensions</b>
        </MudLink>
    </h3>
    <MudText Type="Typo.body2">
        Extends the Mud Widgets even further.
    </MudText>
    <br/>


    <!--  MudTheme - Default (not the one being used in this app -->
    <h3>
        <MudLink Href="https://mudblazor.com/customization/default-theme#palette" Target="_blank" Typo="Typo.body2" Color="Color.Primary">
            <b>Mud Theme Basic EndpointInfo</b>
        </MudLink>
    </h3>
    <MudText Type="Typo.body2">
        Provides Theme wide CSS variable names and every CSS variable defined by the default theme.
        Additional EndpointInfo:
    </MudText>
    <MudLink Href="https://crispycode.net/exploring-the-mudthemeprovider-in-mudblazor/" Target="_blank" Typo="Typo.body2" Color="Color.Primary">
        <b>Mud Theme detailed info</b>
    </MudLink>


    <br/>
</MudAlert>
<br/>



<MudText Typo="Typo.h3" GutterBottom="true">Endpoints for this Project</MudText>
<br/>
<MudText Typo="Typo.body2">
    This project provides several standard endpoints that help you while developing the application.
    <br/>

    <MudLink Href="@AppInfo.EndpointApi" Target="_blank" Typo="Typo.body2" Color="Color.Primary">
        <b>Base API Endpoint of the Application (Note this is not a valid Link.  It only shows you the root for all Controllers</b>
    </MudLink>
    <br />

    <MudLink Href="@AppInfo.EndpointOpenApi" Target="_blank" Typo="Typo.body2" Color="Color.Primary">
        <b>Base Url of the Application</b>
    </MudLink>
    <br />

    <MudLink Href="@AppInfo.EndpointScalar" Target="_blank" Typo="Typo.body2" Color="Color.Primary">
        <b>EndpointScalar Open API Interactive</b>
    </MudLink>
    <br />

    <MudLink Href="@AppInfo.EndpointPing" Target="_blank" Typo="Typo.body2" Color="Color.Primary">
        <b>Application EndpointPing Tester</b>
    </MudLink>
    <br/>

    <MudLink Href="@AppInfo.EndpointInfo" Target="_blank" Typo="Typo.body2" Color="Color.Primary">
        <b>Basic EndpointInformation about the API</b>
    </MudLink>
    <br/>

    <MudLink Href="@AppInfo.EndpointHealth" Target="_blank" Typo="Typo.body2" Color="Color.Primary">
        <b>Basic EndpointHealth Check information</b>
    </MudLink>
    <br/>

    <MudLink Href="@AppInfo.EndpointSimple" Target="_blank" Typo="Typo.body2" Color="Color.Primary">
        <b>Basic Simple Info endpoint</b>
    </MudLink>
    <br/>

    <MudLink Href="@AppInfo.EndpointConfig" Target="_blank" Typo="Typo.body2" Color="Color.Primary">
        <b>Basic Configuration info</b>
    </MudLink>
    <br />
</MudText>


<br />
<MudText Typo="Typo.h5" GutterBottom="true">Interactivity in this Template</MudText>
<br />
<MudText Typo="Typo.body2">
    When you opt for the "Global" Interactivity Location, <br />
    the render modes are defined in App.razor and consequently apply to all child components.<br />
    In this case, providers are globally set in the MainLayout.<br />
    <br />
    On the other hand, if you choose the "Per page/component" Interactivity Location,<br />
    it is necessary to include the <br />
    <br />
    &lt;MudPopoverProvider /&gt; <br />
    &lt;MudDialogProvider /&gt; <br />
    &lt;MudSnackbarProvider /&gt; <br />
    <br />
    components on every interactive page.<br />
    <br />
    If a render mode is not specified for a page, it defaults to Server-Side Rendering (SSR),<br />
    similar to this page. While MudBlazor allows pages to be rendered in SSR,<br />
    please note that interactive features, such as buttons and dropdown menus, will not be functional.
</MudText>

<br />
<MudText Typo="Typo.h5" GutterBottom="true">What's New in Blazor with the Release of .NET 9</MudText>
<br />

<MudText Typo="Typo.h6" GutterBottom="true">Prerendering</MudText>
<MudText Typo="Typo.body2" GutterBottom="true">
    If you're exploring the features of .NET 9 Blazor,<br /> you might be pleasantly surprised to learn that each page is prerendered on the server,<br /> regardless of the selected render mode.<br /><br />
    This means that you'll need to inject all necessary services on the server,<br /> even when opting for the wasm (WebAssembly) render mode.<br /><br />
    This prerendering functionality is crucial to ensuring that WebAssembly mode feels fast and responsive,<br /> especially when it comes to initial page load times.<br /><br />
    For more information on how to detect prerendering and leverage the RenderContext, you can refer to the following link:
    <MudLink Href="https://github.com/dotnet/aspnetcore/issues/51468#issuecomment-1783568121" Target="_blank" Typo="Typo.body2" Color="Color.Primary">
        More details
    </MudLink>
</MudText>

<br />
<MudText Typo="Typo.h6" GutterBottom="true">InteractiveAuto</MudText>
<MudText Typo="Typo.body2">
    A discussion on how to achieve this can be found here:
    <MudLink Href="https://github.com/dotnet/aspnetcore/issues/51468#issue-1950424116" Target="_blank" Typo="Typo.body2" Color="Color.Primary">
        More details
    </MudLink>
</MudText>



@code
{

    [Inject]
    private IAppInfo AppInfo { get; set; } = default!;


    private User user = new User()
    {
        FirstName     = "Michael",
        LastName      = "Doe",
        Email         = "t@j.com",
        PhoneExternal = "44444444",
    };

    
    bool ageChanged = false;
    public void AgeChanged(bool isChanged)
    {
        ageChanged = isChanged;
    }

    protected async override Task OnInitializedAsync()
    {


        
    }
}